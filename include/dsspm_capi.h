#ifndef DSSPM_CAPI_DLL_H
#define DSSPM_CAPI_DLL_H
#define DSSPM_CAPI_VERSION "0.9.3"
#ifndef DSSPM_CAPI_DLL
//#define DSSPM_CAPI_DLL __declspec(dllimport)
#define DSSPM_CAPI_DLL
#endif
#ifdef __cplusplus
extern "C" {
#else
#endif
    DSSPM_CAPI_DLL void DSS_ResetStringBuffer(void);
    DSSPM_CAPI_DLL void DSS_Dispose_PByte(int8_t** p);
    DSSPM_CAPI_DLL void DSS_Dispose_PDouble(double** p);
    DSSPM_CAPI_DLL void DSS_Dispose_PInteger(int32_t** p);
    DSSPM_CAPI_DLL void DSS_Dispose_PPAnsiChar(char ***p, int32_t cnt);

    DSSPM_CAPI_DLL void ActiveClass_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t ActiveClass_Get_First(void);
    DSSPM_CAPI_DLL int32_t ActiveClass_Get_Next(void);
    DSSPM_CAPI_DLL char* ActiveClass_Get_Name(void);
    DSSPM_CAPI_DLL void ActiveClass_Set_Name(char* Value);
    DSSPM_CAPI_DLL int32_t ActiveClass_Get_NumElements(void);
    DSSPM_CAPI_DLL char* ActiveClass_Get_ActiveClassName(void);
    DSSPM_CAPI_DLL int32_t ActiveClass_Get_Count(void);
    DSSPM_CAPI_DLL char* Bus_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Bus_Get_NumNodes(void);
    DSSPM_CAPI_DLL void Bus_Get_SeqVoltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_Voltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_Nodes(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_Isc(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_Voc(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Bus_Get_kVBase(void);
    DSSPM_CAPI_DLL void Bus_Get_puVoltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_Zsc0(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_Zsc1(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_ZscMatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL uint16_t Bus_ZscRefresh(void);
    DSSPM_CAPI_DLL void Bus_Get_YscMatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL uint16_t Bus_Get_Coorddefined(void);
    DSSPM_CAPI_DLL double Bus_Get_x(void);
    DSSPM_CAPI_DLL void Bus_Set_x(double Value);
    DSSPM_CAPI_DLL double Bus_Get_y(void);
    DSSPM_CAPI_DLL void Bus_Set_y(double Value);
    DSSPM_CAPI_DLL double Bus_Get_Distance(void);
    DSSPM_CAPI_DLL int32_t Bus_GetUniqueNodeNumber(int32_t StartNumber);
    DSSPM_CAPI_DLL void Bus_Get_CplxSeqVoltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Bus_Get_Int_Duration(void);
    DSSPM_CAPI_DLL double Bus_Get_Lambda(void);
    DSSPM_CAPI_DLL double Bus_Get_Cust_Duration(void);
    DSSPM_CAPI_DLL double Bus_Get_Cust_Interrupts(void);
    DSSPM_CAPI_DLL int32_t Bus_Get_N_Customers(void);
    DSSPM_CAPI_DLL double Bus_Get_N_interrupts(void);
    DSSPM_CAPI_DLL void Bus_Get_puVLL(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_VLL(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_puVmagAngle(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Bus_Get_VMagAngle(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Bus_Get_TotalMiles(void);
    DSSPM_CAPI_DLL int32_t Bus_Get_SectionID(void);
    DSSPM_CAPI_DLL void Capacitors_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Capacitors_Get_First(void);
    DSSPM_CAPI_DLL uint16_t Capacitors_Get_IsDelta(void);
    DSSPM_CAPI_DLL double Capacitors_Get_kV(void);
    DSSPM_CAPI_DLL double Capacitors_Get_kvar(void);
    DSSPM_CAPI_DLL char* Capacitors_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Capacitors_Get_Next(void);
    DSSPM_CAPI_DLL int32_t Capacitors_Get_NumSteps(void);
    DSSPM_CAPI_DLL void Capacitors_Set_IsDelta(uint16_t Value);
    DSSPM_CAPI_DLL void Capacitors_Set_kV(double Value);
    DSSPM_CAPI_DLL void Capacitors_Set_kvar(double Value);
    DSSPM_CAPI_DLL void Capacitors_Set_Name(char* Value);
    DSSPM_CAPI_DLL void Capacitors_Set_NumSteps(int32_t Value);
    DSSPM_CAPI_DLL int32_t Capacitors_Get_Count(void);
    DSSPM_CAPI_DLL uint16_t Capacitors_AddStep(void);
    DSSPM_CAPI_DLL uint16_t Capacitors_SubtractStep(void);
    DSSPM_CAPI_DLL int32_t Capacitors_Get_AvailableSteps(void);
    DSSPM_CAPI_DLL void Capacitors_Get_States(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Capacitors_Set_States(int32_t* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Capacitors_Open(void);
    DSSPM_CAPI_DLL void Capacitors_Close(void);
    DSSPM_CAPI_DLL void CapControls_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* CapControls_Get_Capacitor(void);
    DSSPM_CAPI_DLL double CapControls_Get_CTratio(void);
    DSSPM_CAPI_DLL double CapControls_Get_DeadTime(void);
    DSSPM_CAPI_DLL double CapControls_Get_Delay(void);
    DSSPM_CAPI_DLL double CapControls_Get_DelayOff(void);
    DSSPM_CAPI_DLL int32_t CapControls_Get_First(void);
    DSSPM_CAPI_DLL int32_t CapControls_Get_Mode(void);
    DSSPM_CAPI_DLL char* CapControls_Get_MonitoredObj(void);
    DSSPM_CAPI_DLL int32_t CapControls_Get_MonitoredTerm(void);
    DSSPM_CAPI_DLL char* CapControls_Get_Name(void);
    DSSPM_CAPI_DLL int32_t CapControls_Get_Next(void);
    DSSPM_CAPI_DLL double CapControls_Get_OFFSetting(void);
    DSSPM_CAPI_DLL double CapControls_Get_ONSetting(void);
    DSSPM_CAPI_DLL double CapControls_Get_PTratio(void);
    DSSPM_CAPI_DLL uint16_t CapControls_Get_UseVoltOverride(void);
    DSSPM_CAPI_DLL double CapControls_Get_Vmax(void);
    DSSPM_CAPI_DLL double CapControls_Get_Vmin(void);
    DSSPM_CAPI_DLL void CapControls_Set_Capacitor(char* Value);
    DSSPM_CAPI_DLL void CapControls_Set_CTratio(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_DeadTime(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_Delay(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_DelayOff(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_Mode(int32_t Value);
    DSSPM_CAPI_DLL void CapControls_Set_MonitoredObj(char* Value);
    DSSPM_CAPI_DLL void CapControls_Set_MonitoredTerm(int32_t Value);
    DSSPM_CAPI_DLL void CapControls_Set_Name(char* Value);
    DSSPM_CAPI_DLL void CapControls_Set_OFFSetting(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_ONSetting(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_PTratio(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_UseVoltOverride(uint16_t Value);
    DSSPM_CAPI_DLL void CapControls_Set_Vmax(double Value);
    DSSPM_CAPI_DLL void CapControls_Set_Vmin(double Value);
    DSSPM_CAPI_DLL int32_t CapControls_Get_Count(void);
    DSSPM_CAPI_DLL void CapControls_Reset(void);
    DSSPM_CAPI_DLL char* Circuit_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Circuit_Get_NumBuses(void);
    DSSPM_CAPI_DLL int32_t Circuit_Get_NumCktElements(void);
    DSSPM_CAPI_DLL int32_t Circuit_Get_NumNodes(void);
    DSSPM_CAPI_DLL void Circuit_Get_LineLosses(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_Losses(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllBusVmag(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllBusVolts(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllElementNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_SubstationLosses(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_TotalPower(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Disable(char* Name);
    DSSPM_CAPI_DLL void Circuit_Enable(char* Name);
    DSSPM_CAPI_DLL int32_t Circuit_FirstPCElement(void);
    DSSPM_CAPI_DLL int32_t Circuit_FirstPDElement(void);
    DSSPM_CAPI_DLL int32_t Circuit_NextPCElement(void);
    DSSPM_CAPI_DLL int32_t Circuit_NextPDElement(void);
    DSSPM_CAPI_DLL void Circuit_Get_AllBusNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllElementLosses(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Sample(void);
    DSSPM_CAPI_DLL void Circuit_SaveSample(void);
    DSSPM_CAPI_DLL int32_t Circuit_SetActiveElement(char* FullName);
    DSSPM_CAPI_DLL double Circuit_Capacity(double Start, double Increment);
    DSSPM_CAPI_DLL void Circuit_Get_AllBusVmagPu(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Circuit_SetActiveBus(char* BusName);
    DSSPM_CAPI_DLL int32_t Circuit_SetActiveBusi(int32_t BusIndex);
    DSSPM_CAPI_DLL void Circuit_Get_AllNodeNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_SystemY(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllBusDistances(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllNodeDistances(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_AllNodeDistancesByPhase(double** ResultPtr, int32_t* ResultCount, int32_t Phase);
    DSSPM_CAPI_DLL void Circuit_Get_AllNodeVmagByPhase(double** ResultPtr, int32_t* ResultCount, int32_t Phase);
    DSSPM_CAPI_DLL void Circuit_Get_AllNodeVmagPUByPhase(double** ResultPtr, int32_t* ResultCount, int32_t Phase);
    DSSPM_CAPI_DLL void Circuit_Get_AllNodeNamesByPhase(char*** ResultPtr, int32_t* ResultCount, int32_t Phase);
    DSSPM_CAPI_DLL int32_t Circuit_SetActiveClass(char* ClassName);
    DSSPM_CAPI_DLL int32_t Circuit_FirstElement(void);
    DSSPM_CAPI_DLL int32_t Circuit_NextElement(void);
    DSSPM_CAPI_DLL void Circuit_UpdateStorage(void);
    DSSPM_CAPI_DLL int32_t Circuit_Get_ParentPDElement(void);
    DSSPM_CAPI_DLL void Circuit_EndOfTimeStepUpdate(void);
    DSSPM_CAPI_DLL void Circuit_Get_YNodeOrder(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_YCurrents(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Circuit_Get_YNodeVarray(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_BusNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* CktElement_Get_Name(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_NumConductors(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_NumPhases(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_NumTerminals(void);
    DSSPM_CAPI_DLL void CktElement_Set_BusNames(char** ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void CktElement_Get_Currents(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_Voltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double CktElement_Get_EmergAmps(void);
    DSSPM_CAPI_DLL uint16_t CktElement_Get_Enabled(void);
    DSSPM_CAPI_DLL void CktElement_Get_Losses(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double CktElement_Get_NormalAmps(void);
    DSSPM_CAPI_DLL void CktElement_Get_PhaseLosses(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_Powers(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_SeqCurrents(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_SeqPowers(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_SeqVoltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Close(int32_t Term, int32_t Phs);
    DSSPM_CAPI_DLL void CktElement_Open(int32_t Term, int32_t Phs);
    DSSPM_CAPI_DLL void CktElement_Set_EmergAmps(double Value);
    DSSPM_CAPI_DLL void CktElement_Set_Enabled(uint16_t Value);
    DSSPM_CAPI_DLL void CktElement_Set_NormalAmps(double Value);
    DSSPM_CAPI_DLL uint16_t CktElement_IsOpen(int32_t Term, int32_t Phs);
    DSSPM_CAPI_DLL void CktElement_Get_AllPropertyNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t CktElement_Get_NumProperties(void);
    DSSPM_CAPI_DLL void CktElement_Get_Residuals(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_Yprim(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* CktElement_Get_DisplayName(void);
    DSSPM_CAPI_DLL char* CktElement_Get_GUID(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_Handle(void);
    DSSPM_CAPI_DLL void CktElement_Set_DisplayName(char* Value);
    DSSPM_CAPI_DLL char* CktElement_Get_Controller(int32_t idx);
    DSSPM_CAPI_DLL char* CktElement_Get_EnergyMeter(void);
    DSSPM_CAPI_DLL uint16_t CktElement_Get_HasVoltControl(void);
    DSSPM_CAPI_DLL uint16_t CktElement_Get_HasSwitchControl(void);
    DSSPM_CAPI_DLL void CktElement_Get_CplxSeqVoltages(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_CplxSeqCurrents(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_AllVariableNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_AllVariableValues(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double CktElement_Get_Variable(char* MyVarName, int32_t Code);
    DSSPM_CAPI_DLL double CktElement_Get_Variablei(int32_t Idx, int32_t Code);
    DSSPM_CAPI_DLL void CktElement_Get_NodeOrder(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL uint16_t CktElement_Get_HasOCPDevice(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_NumControls(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_OCPDevIndex(void);
    DSSPM_CAPI_DLL int32_t CktElement_Get_OCPDevType(void);
    DSSPM_CAPI_DLL void CktElement_Get_CurrentsMagAng(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CktElement_Get_VoltagesMagAng(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void CmathLib_Get_cmplx(double** ResultPtr, int32_t* ResultCount, double RealPart, double ImagPart);
    DSSPM_CAPI_DLL double CmathLib_Get_cabs(double realpart, double imagpart);
    DSSPM_CAPI_DLL double CmathLib_Get_cdang(double RealPart, double ImagPart);
    DSSPM_CAPI_DLL void CmathLib_Get_ctopolardeg(double** ResultPtr, int32_t* ResultCount, double RealPart, double ImagPart);
    DSSPM_CAPI_DLL void CmathLib_Get_pdegtocomplex(double** ResultPtr, int32_t* ResultCount, double magnitude, double angle);
    DSSPM_CAPI_DLL void CmathLib_Get_cmul(double** ResultPtr, int32_t* ResultCount, double a1, double b1, double a2, double b2);
    DSSPM_CAPI_DLL void CmathLib_Get_cdiv(double** ResultPtr, int32_t* ResultCount, double a1, double b1, double a2, double b2);
    DSSPM_CAPI_DLL void CtrlQueue_ClearQueue(void);
    DSSPM_CAPI_DLL void CtrlQueue_Delete(int32_t ActionHandle);
    DSSPM_CAPI_DLL int32_t CtrlQueue_Get_ActionCode(void);
    DSSPM_CAPI_DLL int32_t CtrlQueue_Get_DeviceHandle(void);
    DSSPM_CAPI_DLL int32_t CtrlQueue_Get_NumActions(void);
    DSSPM_CAPI_DLL void CtrlQueue_Show(void);
    DSSPM_CAPI_DLL void CtrlQueue_ClearActions(void);
    DSSPM_CAPI_DLL int32_t CtrlQueue_Get_PopAction(void);
    DSSPM_CAPI_DLL void CtrlQueue_Set_Action(int32_t Param1);
    DSSPM_CAPI_DLL int32_t CtrlQueue_Get_QueueSize(void);
    DSSPM_CAPI_DLL void CtrlQueue_DoAllQueue(void);
    DSSPM_CAPI_DLL void CtrlQueue_Get_Queue(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t DSS_Get_NumCircuits(void);
    DSSPM_CAPI_DLL void DSS_ClearAll(void);
    DSSPM_CAPI_DLL char* DSS_Get_Version(void);
    DSSPM_CAPI_DLL uint16_t DSS_Start(int32_t code);
    DSSPM_CAPI_DLL void DSS_Get_Classes(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void DSS_Get_UserClasses(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t DSS_Get_NumClasses(void);
    DSSPM_CAPI_DLL int32_t DSS_Get_NumUserClasses(void);
    DSSPM_CAPI_DLL char* DSS_Get_DataPath(void);
    DSSPM_CAPI_DLL void DSS_Set_DataPath(char* Value);
    DSSPM_CAPI_DLL void DSS_Reset(void);
    DSSPM_CAPI_DLL char* DSS_Get_DefaultEditor(void);
    DSSPM_CAPI_DLL int32_t DSS_SetActiveClass(char* ClassName);
    DSSPM_CAPI_DLL void DSSElement_Get_AllPropertyNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* DSSElement_Get_Name(void);
    DSSPM_CAPI_DLL int32_t DSSElement_Get_NumProperties(void);
    DSSPM_CAPI_DLL void DSSimComs_BusVoltagepu(double** ResultPtr, int32_t* ResultCount, size_t Index);
    DSSPM_CAPI_DLL void DSSimComs_BusVoltage(double** ResultPtr, int32_t* ResultCount, size_t Index);
    DSSPM_CAPI_DLL void DSSProgress_Close(void);
    DSSPM_CAPI_DLL void DSSProgress_Set_Caption(char* Value);
    DSSPM_CAPI_DLL void DSSProgress_Set_PctProgress(int32_t Value);
    DSSPM_CAPI_DLL void DSSProgress_Show(void);
    DSSPM_CAPI_DLL char* DSSProperty_Get_Description(void);
    DSSPM_CAPI_DLL char* DSSProperty_Get_Name(void);
    DSSPM_CAPI_DLL char* DSSProperty_Get_Val(void);
    DSSPM_CAPI_DLL void DSSProperty_Set_Val(char* Value);
    DSSPM_CAPI_DLL char* DSS_Executive_Get_Command(int32_t i);
    DSSPM_CAPI_DLL int32_t DSS_Executive_Get_NumCommands(void);
    DSSPM_CAPI_DLL int32_t DSS_Executive_Get_NumOptions(void);
    DSSPM_CAPI_DLL char* DSS_Executive_Get_Option(int32_t i);
    DSSPM_CAPI_DLL char* DSS_Executive_Get_CommandHelp(int32_t i);
    DSSPM_CAPI_DLL char* DSS_Executive_Get_OptionHelp(int32_t i);
    DSSPM_CAPI_DLL char* DSS_Executive_Get_OptionValue(int32_t i);
    DSSPM_CAPI_DLL char* Error_Get_Description(void);
    DSSPM_CAPI_DLL int32_t Error_Get_Number(void);
    DSSPM_CAPI_DLL void Fuses_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Fuses_Get_Count(void);
    DSSPM_CAPI_DLL int32_t Fuses_Get_First(void);
    DSSPM_CAPI_DLL char* Fuses_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Fuses_Get_Next(void);
    DSSPM_CAPI_DLL void Fuses_Set_Name(char* Value);
    DSSPM_CAPI_DLL char* Fuses_Get_MonitoredObj(void);
    DSSPM_CAPI_DLL int32_t Fuses_Get_MonitoredTerm(void);
    DSSPM_CAPI_DLL char* Fuses_Get_SwitchedObj(void);
    DSSPM_CAPI_DLL void Fuses_Set_MonitoredObj(char* Value);
    DSSPM_CAPI_DLL void Fuses_Set_MonitoredTerm(int32_t Value);
    DSSPM_CAPI_DLL void Fuses_Set_SwitchedObj(char* Value);
    DSSPM_CAPI_DLL int32_t Fuses_Get_SwitchedTerm(void);
    DSSPM_CAPI_DLL void Fuses_Set_SwitchedTerm(int32_t Value);
    DSSPM_CAPI_DLL char* Fuses_Get_TCCcurve(void);
    DSSPM_CAPI_DLL void Fuses_Set_TCCcurve(char* Value);
    DSSPM_CAPI_DLL double Fuses_Get_RatedCurrent(void);
    DSSPM_CAPI_DLL void Fuses_Set_RatedCurrent(double Value);
    DSSPM_CAPI_DLL double Fuses_Get_Delay(void);
    DSSPM_CAPI_DLL void Fuses_Open(void);
    DSSPM_CAPI_DLL void Fuses_Close(void);
    DSSPM_CAPI_DLL void Fuses_Set_Delay(double Value);
    DSSPM_CAPI_DLL int32_t Fuses_Get_idx(void);
    DSSPM_CAPI_DLL void Fuses_Set_idx(int32_t Value);
    DSSPM_CAPI_DLL int32_t Fuses_Get_NumPhases(void);
    DSSPM_CAPI_DLL void Generators_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Generators_Get_First(void);
    DSSPM_CAPI_DLL char* Generators_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Generators_Get_Next(void);
    DSSPM_CAPI_DLL void Generators_Get_RegisterNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Generators_Get_RegisterValues(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL uint16_t Generators_Get_ForcedON(void);
    DSSPM_CAPI_DLL void Generators_Set_ForcedON(uint16_t Value);
    DSSPM_CAPI_DLL void Generators_Set_Name(char* Value);
    DSSPM_CAPI_DLL double Generators_Get_kV(void);
    DSSPM_CAPI_DLL double Generators_Get_kvar(void);
    DSSPM_CAPI_DLL double Generators_Get_kW(void);
    DSSPM_CAPI_DLL double Generators_Get_PF(void);
    DSSPM_CAPI_DLL int32_t Generators_Get_Phases(void);
    DSSPM_CAPI_DLL void Generators_Set_kV(double Value);
    DSSPM_CAPI_DLL void Generators_Set_kvar(double Value);
    DSSPM_CAPI_DLL void Generators_Set_kW(double Value);
    DSSPM_CAPI_DLL void Generators_Set_PF(double Value);
    DSSPM_CAPI_DLL void Generators_Set_Phases(int32_t Value);
    DSSPM_CAPI_DLL int32_t Generators_Get_Count(void);
    DSSPM_CAPI_DLL int32_t Generators_Get_idx(void);
    DSSPM_CAPI_DLL void Generators_Set_idx(int32_t Value);
    DSSPM_CAPI_DLL int32_t Generators_Get_Model(void);
    DSSPM_CAPI_DLL void Generators_Set_Model(int32_t Value);
    DSSPM_CAPI_DLL double Generators_Get_kVArated(void);
    DSSPM_CAPI_DLL void Generators_Set_kVArated(double Value);
    DSSPM_CAPI_DLL double Generators_Get_Vmaxpu(void);
    DSSPM_CAPI_DLL double Generators_Get_Vminpu(void);
    DSSPM_CAPI_DLL void Generators_Set_Vmaxpu(double Value);
    DSSPM_CAPI_DLL void Generators_Set_Vminpu(double Value);
    DSSPM_CAPI_DLL void ISources_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t ISources_Get_Count(void);
    DSSPM_CAPI_DLL int32_t ISources_Get_First(void);
    DSSPM_CAPI_DLL int32_t ISources_Get_Next(void);
    DSSPM_CAPI_DLL char* ISources_Get_Name(void);
    DSSPM_CAPI_DLL void ISources_Set_Name(char* Value);
    DSSPM_CAPI_DLL double ISources_Get_Amps(void);
    DSSPM_CAPI_DLL void ISources_Set_Amps(double Value);
    DSSPM_CAPI_DLL double ISources_Get_AngleDeg(void);
    DSSPM_CAPI_DLL double ISources_Get_Frequency(void);
    DSSPM_CAPI_DLL void ISources_Set_AngleDeg(double Value);
    DSSPM_CAPI_DLL void ISources_Set_Frequency(double Value);
    DSSPM_CAPI_DLL int32_t LineCodes_Get_Count(void);
    DSSPM_CAPI_DLL int32_t LineCodes_Get_First(void);
    DSSPM_CAPI_DLL int32_t LineCodes_Get_Next(void);
    DSSPM_CAPI_DLL char* LineCodes_Get_Name(void);
    DSSPM_CAPI_DLL void LineCodes_Set_Name(char* Value);
    DSSPM_CAPI_DLL uint16_t LineCodes_Get_IsZ1Z0(void);
    DSSPM_CAPI_DLL int32_t LineCodes_Get_Units(void);
    DSSPM_CAPI_DLL void LineCodes_Set_Units(int32_t Value);
    DSSPM_CAPI_DLL int32_t LineCodes_Get_Phases(void);
    DSSPM_CAPI_DLL void LineCodes_Set_Phases(int32_t Value);
    DSSPM_CAPI_DLL double LineCodes_Get_R1(void);
    DSSPM_CAPI_DLL void LineCodes_Set_R1(double Value);
    DSSPM_CAPI_DLL double LineCodes_Get_X1(void);
    DSSPM_CAPI_DLL void LineCodes_Set_X1(double Value);
    DSSPM_CAPI_DLL double LineCodes_Get_R0(void);
    DSSPM_CAPI_DLL double LineCodes_Get_X0(void);
    DSSPM_CAPI_DLL void LineCodes_Set_R0(double Value);
    DSSPM_CAPI_DLL void LineCodes_Set_X0(double Value);
    DSSPM_CAPI_DLL double LineCodes_Get_C0(void);
    DSSPM_CAPI_DLL double LineCodes_Get_C1(void);
    DSSPM_CAPI_DLL void LineCodes_Set_C0(double Value);
    DSSPM_CAPI_DLL void LineCodes_Set_C1(double Value);
    DSSPM_CAPI_DLL void LineCodes_Get_Cmatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void LineCodes_Get_Rmatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void LineCodes_Get_Xmatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void LineCodes_Set_Cmatrix(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void LineCodes_Set_Rmatrix(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void LineCodes_Set_Xmatrix(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL double LineCodes_Get_NormAmps(void);
    DSSPM_CAPI_DLL void LineCodes_Set_NormAmps(double Value);
    DSSPM_CAPI_DLL double LineCodes_Get_EmergAmps(void);
    DSSPM_CAPI_DLL void LineCodes_Set_EmergAmps(double Value);
    DSSPM_CAPI_DLL void LineCodes_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Lines_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* Lines_Get_Bus1(void);
    DSSPM_CAPI_DLL char* Lines_Get_Bus2(void);
    DSSPM_CAPI_DLL int32_t Lines_Get_First(void);
    DSSPM_CAPI_DLL double Lines_Get_Length(void);
    DSSPM_CAPI_DLL char* Lines_Get_LineCode(void);
    DSSPM_CAPI_DLL char* Lines_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Lines_Get_Next(void);
    DSSPM_CAPI_DLL int32_t Lines_Get_Phases(void);
    DSSPM_CAPI_DLL double Lines_Get_R1(void);
    DSSPM_CAPI_DLL double Lines_Get_X1(void);
    DSSPM_CAPI_DLL int32_t Lines_New(char* Name);
    DSSPM_CAPI_DLL void Lines_Set_Bus1(char* Value);
    DSSPM_CAPI_DLL void Lines_Set_Bus2(char* Value);
    DSSPM_CAPI_DLL void Lines_Set_Length(double Value);
    DSSPM_CAPI_DLL void Lines_Set_LineCode(char* Value);
    DSSPM_CAPI_DLL void Lines_Set_Name(char* Value);
    DSSPM_CAPI_DLL void Lines_Set_Phases(int32_t Value);
    DSSPM_CAPI_DLL void Lines_Set_R1(double Value);
    DSSPM_CAPI_DLL void Lines_Set_X1(double Value);
    DSSPM_CAPI_DLL double Lines_Get_C0(void);
    DSSPM_CAPI_DLL double Lines_Get_C1(void);
    DSSPM_CAPI_DLL void Lines_Get_Cmatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Lines_Get_R0(void);
    DSSPM_CAPI_DLL void Lines_Get_Rmatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Lines_Get_X0(void);
    DSSPM_CAPI_DLL void Lines_Get_Xmatrix(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Lines_Set_C0(double Value);
    DSSPM_CAPI_DLL void Lines_Set_C1(double Value);
    DSSPM_CAPI_DLL void Lines_Set_Cmatrix(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Lines_Set_R0(double Value);
    DSSPM_CAPI_DLL void Lines_Set_Rmatrix(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Lines_Set_X0(double Value);
    DSSPM_CAPI_DLL void Lines_Set_Xmatrix(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL double Lines_Get_EmergAmps(void);
    DSSPM_CAPI_DLL double Lines_Get_NormAmps(void);
    DSSPM_CAPI_DLL void Lines_Set_EmergAmps(double Value);
    DSSPM_CAPI_DLL void Lines_Set_NormAmps(double Value);
    DSSPM_CAPI_DLL char* Lines_Get_Geometry(void);
    DSSPM_CAPI_DLL void Lines_Set_Geometry(char* Value);
    DSSPM_CAPI_DLL double Lines_Get_Rg(void);
    DSSPM_CAPI_DLL double Lines_Get_Rho(void);
    DSSPM_CAPI_DLL double Lines_Get_Xg(void);
    DSSPM_CAPI_DLL void Lines_Set_Rg(double Value);
    DSSPM_CAPI_DLL void Lines_Set_Rho(double Value);
    DSSPM_CAPI_DLL void Lines_Set_Xg(double Value);
    DSSPM_CAPI_DLL void Lines_Get_Yprim(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Lines_Set_Yprim(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL int32_t Lines_Get_NumCust(void);
    DSSPM_CAPI_DLL int32_t Lines_Get_TotalCust(void);
    DSSPM_CAPI_DLL int32_t Lines_Get_Parent(void);
    DSSPM_CAPI_DLL int32_t Lines_Get_Count(void);
    DSSPM_CAPI_DLL char* Lines_Get_Spacing(void);
    DSSPM_CAPI_DLL void Lines_Set_Spacing(char* Value);
    DSSPM_CAPI_DLL int32_t Lines_Get_Units(void);
    DSSPM_CAPI_DLL void Lines_Set_Units(int32_t Value);
    DSSPM_CAPI_DLL void Loads_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Loads_Get_First(void);
    DSSPM_CAPI_DLL int32_t Loads_Get_idx(void);
    DSSPM_CAPI_DLL char* Loads_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Loads_Get_Next(void);
    DSSPM_CAPI_DLL void Loads_Set_idx(int32_t Value);
    DSSPM_CAPI_DLL void Loads_Set_Name(char* Value);
    DSSPM_CAPI_DLL double Loads_Get_kV(void);
    DSSPM_CAPI_DLL double Loads_Get_kvar(void);
    DSSPM_CAPI_DLL double Loads_Get_kW(void);
    DSSPM_CAPI_DLL double Loads_Get_PF(void);
    DSSPM_CAPI_DLL void Loads_Set_kV(double Value);
    DSSPM_CAPI_DLL void Loads_Set_kvar(double Value);
    DSSPM_CAPI_DLL void Loads_Set_kW(double Value);
    DSSPM_CAPI_DLL void Loads_Set_PF(double Value);
    DSSPM_CAPI_DLL int32_t Loads_Get_Count(void);
    DSSPM_CAPI_DLL double Loads_Get_AllocationFactor(void);
    DSSPM_CAPI_DLL double Loads_Get_Cfactor(void);
    DSSPM_CAPI_DLL int32_t Loads_Get_Class_(void);
    DSSPM_CAPI_DLL char* Loads_Get_CVRcurve(void);
    DSSPM_CAPI_DLL double Loads_Get_CVRvars(void);
    DSSPM_CAPI_DLL double Loads_Get_CVRwatts(void);
    DSSPM_CAPI_DLL char* Loads_Get_daily(void);
    DSSPM_CAPI_DLL char* Loads_Get_duty(void);
    DSSPM_CAPI_DLL char* Loads_Get_Growth(void);
    DSSPM_CAPI_DLL uint16_t Loads_Get_IsDelta(void);
    DSSPM_CAPI_DLL double Loads_Get_kva(void);
    DSSPM_CAPI_DLL double Loads_Get_kwh(void);
    DSSPM_CAPI_DLL double Loads_Get_kwhdays(void);
    DSSPM_CAPI_DLL int32_t Loads_Get_Model(void);
    DSSPM_CAPI_DLL int32_t Loads_Get_NumCust(void);
    DSSPM_CAPI_DLL double Loads_Get_PctMean(void);
    DSSPM_CAPI_DLL double Loads_Get_PctStdDev(void);
    DSSPM_CAPI_DLL double Loads_Get_Rneut(void);
    DSSPM_CAPI_DLL char* Loads_Get_Spectrum(void);
    DSSPM_CAPI_DLL int32_t Loads_Get_Status(void);
    DSSPM_CAPI_DLL double Loads_Get_Vmaxpu(void);
    DSSPM_CAPI_DLL double Loads_Get_Vminemerg(void);
    DSSPM_CAPI_DLL double Loads_Get_Vminnorm(void);
    DSSPM_CAPI_DLL double Loads_Get_Vminpu(void);
    DSSPM_CAPI_DLL double Loads_Get_xfkVA(void);
    DSSPM_CAPI_DLL double Loads_Get_Xneut(void);
    DSSPM_CAPI_DLL char* Loads_Get_Yearly(void);
    DSSPM_CAPI_DLL void Loads_Set_AllocationFactor(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Cfactor(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Class_(int32_t Value);
    DSSPM_CAPI_DLL void Loads_Set_CVRcurve(char* Value);
    DSSPM_CAPI_DLL void Loads_Set_CVRvars(double Value);
    DSSPM_CAPI_DLL void Loads_Set_CVRwatts(double Value);
    DSSPM_CAPI_DLL void Loads_Set_daily(char* Value);
    DSSPM_CAPI_DLL void Loads_Set_duty(char* Value);
    DSSPM_CAPI_DLL void Loads_Set_Growth(char* Value);
    DSSPM_CAPI_DLL void Loads_Set_IsDelta(uint16_t Value);
    DSSPM_CAPI_DLL void Loads_Set_kva(double Value);
    DSSPM_CAPI_DLL void Loads_Set_kwh(double Value);
    DSSPM_CAPI_DLL void Loads_Set_kwhdays(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Model(int32_t Value);
    DSSPM_CAPI_DLL void Loads_Set_NumCust(int32_t Value);
    DSSPM_CAPI_DLL void Loads_Set_PctMean(double Value);
    DSSPM_CAPI_DLL void Loads_Set_PctStdDev(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Rneut(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Spectrum(char* Value);
    DSSPM_CAPI_DLL void Loads_Set_Status(int32_t Value);
    DSSPM_CAPI_DLL void Loads_Set_Vmaxpu(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Vminemerg(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Vminnorm(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Vminpu(double Value);
    DSSPM_CAPI_DLL void Loads_Set_xfkVA(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Xneut(double Value);
    DSSPM_CAPI_DLL void Loads_Set_Yearly(char* Value);
    DSSPM_CAPI_DLL void Loads_Get_ZIPV(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Loads_Set_ZIPV(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL double Loads_Get_pctSeriesRL(void);
    DSSPM_CAPI_DLL void Loads_Set_pctSeriesRL(double Value);
    DSSPM_CAPI_DLL double Loads_Get_RelWeight(void);
    DSSPM_CAPI_DLL char* LoadShapes_Get_Name(void);
    DSSPM_CAPI_DLL void LoadShapes_Set_Name(char* Value);
    DSSPM_CAPI_DLL int32_t LoadShapes_Get_Count(void);
    DSSPM_CAPI_DLL int32_t LoadShapes_Get_First(void);
    DSSPM_CAPI_DLL int32_t LoadShapes_Get_Next(void);
    DSSPM_CAPI_DLL void LoadShapes_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t LoadShapes_Get_Npts(void);
    DSSPM_CAPI_DLL void LoadShapes_Get_Pmult(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void LoadShapes_Get_Qmult(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void LoadShapes_Set_Npts(int32_t Value);
    DSSPM_CAPI_DLL void LoadShapes_Set_Pmult(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void LoadShapes_Set_Qmult(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void LoadShapes_Normalize(void);
    DSSPM_CAPI_DLL void LoadShapes_Get_TimeArray(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void LoadShapes_Set_TimeArray(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL double LoadShapes_Get_HrInterval(void);
    DSSPM_CAPI_DLL double LoadShapes_Get_MinInterval(void);
    DSSPM_CAPI_DLL double LoadShapes_Get_sInterval(void);
    DSSPM_CAPI_DLL void LoadShapes_Set_HrInterval(double Value);
    DSSPM_CAPI_DLL void LoadShapes_Set_MinInterval(double Value);
    DSSPM_CAPI_DLL void LoadShapes_Set_Sinterval(double Value);
    DSSPM_CAPI_DLL double LoadShapes_Get_PBase(void);
    DSSPM_CAPI_DLL double LoadShapes_Get_Qbase(void);
    DSSPM_CAPI_DLL void LoadShapes_Set_PBase(double Value);
    DSSPM_CAPI_DLL void LoadShapes_Set_Qbase(double Value);
    DSSPM_CAPI_DLL uint16_t LoadShapes_Get_UseActual(void);
    DSSPM_CAPI_DLL void LoadShapes_Set_UseActual(uint16_t Value);
    DSSPM_CAPI_DLL void Meters_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Meters_Get_First(void);
    DSSPM_CAPI_DLL char* Meters_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_Next(void);
    DSSPM_CAPI_DLL void Meters_Get_RegisterNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Meters_Get_RegisterValues(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Meters_Reset(void);
    DSSPM_CAPI_DLL void Meters_ResetAll(void);
    DSSPM_CAPI_DLL void Meters_Sample(void);
    DSSPM_CAPI_DLL void Meters_Save(void);
    DSSPM_CAPI_DLL void Meters_Set_Name(char* Value);
    DSSPM_CAPI_DLL void Meters_Get_Totals(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Meters_Get_Peakcurrent(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Meters_Set_Peakcurrent(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Meters_Get_CalcCurrent(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Meters_Set_CalcCurrent(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Meters_Get_AllocFactors(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Meters_Set_AllocFactors(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL char* Meters_Get_MeteredElement(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_MeteredTerminal(void);
    DSSPM_CAPI_DLL void Meters_Set_MeteredElement(char* Value);
    DSSPM_CAPI_DLL void Meters_Set_MeteredTerminal(int32_t Value);
    DSSPM_CAPI_DLL uint16_t Meters_Get_DIFilesAreOpen(void);
    DSSPM_CAPI_DLL void Meters_CloseAllDIFiles(void);
    DSSPM_CAPI_DLL void Meters_OpenAllDIFiles(void);
    DSSPM_CAPI_DLL void Meters_SampleAll(void);
    DSSPM_CAPI_DLL void Meters_SaveAll(void);
    DSSPM_CAPI_DLL void Meters_Get_AllEndElements(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Meters_Get_CountEndElements(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_Count(void);
    DSSPM_CAPI_DLL void Meters_Get_AllBranchesInZone(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Meters_Get_CountBranches(void);
    DSSPM_CAPI_DLL double Meters_Get_SAIFI(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_SequenceIndex(void);
    DSSPM_CAPI_DLL void Meters_Set_SequenceIndex(int32_t Value);
    DSSPM_CAPI_DLL double Meters_Get_SAIFIKW(void);
    DSSPM_CAPI_DLL void Meters_DoReliabilityCalc(uint16_t AssumeRestoration);
    DSSPM_CAPI_DLL int32_t Meters_Get_SeqListSize(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_TotalCustomers(void);
    DSSPM_CAPI_DLL double Meters_Get_SAIDI(void);
    DSSPM_CAPI_DLL double Meters_Get_CustInterrupts(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_NumSections(void);
    DSSPM_CAPI_DLL void Meters_SetActiveSection(int32_t SectIdx);
    DSSPM_CAPI_DLL double Meters_Get_AvgRepairTime(void);
    DSSPM_CAPI_DLL double Meters_Get_FaultRateXRepairHrs(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_NumSectionBranches(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_NumSectionCustomers(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_OCPDeviceType(void);
    DSSPM_CAPI_DLL double Meters_Get_SumBranchFltRates(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_SectSeqIdx(void);
    DSSPM_CAPI_DLL int32_t Meters_Get_SectTotalCust(void);
    DSSPM_CAPI_DLL void Monitors_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* Monitors_Get_FileName(void);
    DSSPM_CAPI_DLL int32_t Monitors_Get_First(void);
    DSSPM_CAPI_DLL int32_t Monitors_Get_Mode(void);
    DSSPM_CAPI_DLL char* Monitors_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Monitors_Get_Next(void);
    DSSPM_CAPI_DLL void Monitors_Reset(void);
    DSSPM_CAPI_DLL void Monitors_ResetAll(void);
    DSSPM_CAPI_DLL void Monitors_Sample(void);
    DSSPM_CAPI_DLL void Monitors_Save(void);
    DSSPM_CAPI_DLL void Monitors_Set_Mode(int32_t Value);
    DSSPM_CAPI_DLL void Monitors_Show(void);
    DSSPM_CAPI_DLL void Monitors_Set_Name(char* Value);
    DSSPM_CAPI_DLL void Monitors_Get_ByteStream(int8_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Monitors_Get_SampleCount(void);
    DSSPM_CAPI_DLL void Monitors_SampleAll(void);
    DSSPM_CAPI_DLL void Monitors_SaveAll(void);
    DSSPM_CAPI_DLL int32_t Monitors_Get_Count(void);
    DSSPM_CAPI_DLL void Monitors_Process(void);
    DSSPM_CAPI_DLL void Monitors_ProcessAll(void);
    DSSPM_CAPI_DLL void Monitors_Get_Channel(double** ResultPtr, int32_t* ResultCount, int32_t Index);
    DSSPM_CAPI_DLL void Monitors_Get_dblFreq(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Monitors_Get_dblHour(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Monitors_Get_FileVersion(void);
    DSSPM_CAPI_DLL void Monitors_Get_Header(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Monitors_Get_NumChannels(void);
    DSSPM_CAPI_DLL int32_t Monitors_Get_RecordSize(void);
    DSSPM_CAPI_DLL char* Monitors_Get_Element(void);
    DSSPM_CAPI_DLL void Monitors_Set_Element(char* Value);
    DSSPM_CAPI_DLL int32_t Monitors_Get_Terminal(void);
    DSSPM_CAPI_DLL void Monitors_Set_Terminal(int32_t Value);
    DSSPM_CAPI_DLL int32_t Parallel_Get_NumCPUs(void);
    DSSPM_CAPI_DLL int32_t Parallel_Get_NumCores(void);
    DSSPM_CAPI_DLL int32_t Parallel_Get_ActiveActor(void);
    DSSPM_CAPI_DLL void Parallel_Set_ActiveActor(int32_t Value);
    DSSPM_CAPI_DLL void Parallel_CreateActor(void);
    DSSPM_CAPI_DLL int32_t Parallel_Get_ActorCPU(void);
    DSSPM_CAPI_DLL void Parallel_Set_ActorCPU(int32_t Value);
    DSSPM_CAPI_DLL int32_t Parallel_Get_NumOfActors(void);
    DSSPM_CAPI_DLL void Parallel_Wait(void);
    DSSPM_CAPI_DLL void Parallel_Get_ActorProgress(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Parallel_Get_ActorStatus(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Parallel_Get_ActiveParallel(void);
    DSSPM_CAPI_DLL void Parallel_Set_ActiveParallel(int32_t Value);
    DSSPM_CAPI_DLL int32_t Parallel_Get_ConcatenateReports(void);
    DSSPM_CAPI_DLL void Parallel_Set_ConcatenateReports(int32_t Value);
    DSSPM_CAPI_DLL char* Parser_Get_CmdString(void);
    DSSPM_CAPI_DLL void Parser_Set_CmdString(char* Value);
    DSSPM_CAPI_DLL char* Parser_Get_NextParam(void);
    DSSPM_CAPI_DLL uint16_t Parser_Get_AutoIncrement(void);
    DSSPM_CAPI_DLL void Parser_Set_AutoIncrement(uint16_t Value);
    DSSPM_CAPI_DLL double Parser_Get_DblValue(void);
    DSSPM_CAPI_DLL int32_t Parser_Get_IntValue(void);
    DSSPM_CAPI_DLL char* Parser_Get_StrValue(void);
    DSSPM_CAPI_DLL char* Parser_Get_WhiteSpace(void);
    DSSPM_CAPI_DLL void Parser_Set_WhiteSpace(char* Value);
    DSSPM_CAPI_DLL char* Parser_Get_BeginQuote(void);
    DSSPM_CAPI_DLL char* Parser_Get_EndQuote(void);
    DSSPM_CAPI_DLL void Parser_Set_BeginQuote(char* Value);
    DSSPM_CAPI_DLL void Parser_Set_EndQuote(char* Value);
    DSSPM_CAPI_DLL char* Parser_Get_Delimiters(void);
    DSSPM_CAPI_DLL void Parser_Set_Delimiters(char* Value);
    DSSPM_CAPI_DLL void Parser_ResetDelimiters(void);
    DSSPM_CAPI_DLL void Parser_Get_Vector(double** ResultPtr, int32_t* ResultCount, int32_t ExpectedSize);
    DSSPM_CAPI_DLL void Parser_Get_Matrix(double** ResultPtr, int32_t* ResultCount, int32_t ExpectedOrder);
    DSSPM_CAPI_DLL void Parser_Get_SymMatrix(double** ResultPtr, int32_t* ResultCount, int32_t ExpectedOrder);
    DSSPM_CAPI_DLL int32_t PDElements_Get_Count(void);
    DSSPM_CAPI_DLL double PDElements_Get_FaultRate(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_First(void);
    DSSPM_CAPI_DLL uint16_t PDElements_Get_IsShunt(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_Next(void);
    DSSPM_CAPI_DLL double PDElements_Get_pctPermanent(void);
    DSSPM_CAPI_DLL void PDElements_Set_FaultRate(double Value);
    DSSPM_CAPI_DLL void PDElements_Set_pctPermanent(double Value);
    DSSPM_CAPI_DLL char* PDElements_Get_Name(void);
    DSSPM_CAPI_DLL void PDElements_Set_Name(char* Value);
    DSSPM_CAPI_DLL double PDElements_Get_AccumulatedL(void);
    DSSPM_CAPI_DLL double PDElements_Get_Lambda(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_Numcustomers(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_ParentPDElement(void);
    DSSPM_CAPI_DLL double PDElements_Get_RepairTime(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_Totalcustomers(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_FromTerminal(void);
    DSSPM_CAPI_DLL double PDElements_Get_TotalMiles(void);
    DSSPM_CAPI_DLL int32_t PDElements_Get_SectionID(void);
    DSSPM_CAPI_DLL void PDElements_Set_RepairTime(double Value);
    DSSPM_CAPI_DLL void PVSystems_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void PVSystems_Get_RegisterNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void PVSystems_Get_RegisterValues(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t PVSystems_Get_First(void);
    DSSPM_CAPI_DLL int32_t PVSystems_Get_Next(void);
    DSSPM_CAPI_DLL int32_t PVSystems_Get_Count(void);
    DSSPM_CAPI_DLL int32_t PVSystems_Get_idx(void);
    DSSPM_CAPI_DLL void PVSystems_Set_idx(int32_t Value);
    DSSPM_CAPI_DLL char* PVSystems_Get_Name(void);
    DSSPM_CAPI_DLL void PVSystems_Set_Name(char* Value);
    DSSPM_CAPI_DLL double PVSystems_Get_Irradiance(void);
    DSSPM_CAPI_DLL void PVSystems_Set_Irradiance(double Value);
    DSSPM_CAPI_DLL double PVSystems_Get_kvar(void);
    DSSPM_CAPI_DLL double PVSystems_Get_kVArated(void);
    DSSPM_CAPI_DLL double PVSystems_Get_kW(void);
    DSSPM_CAPI_DLL double PVSystems_Get_PF(void);
    DSSPM_CAPI_DLL void Reclosers_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_Count(void);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_First(void);
    DSSPM_CAPI_DLL char* Reclosers_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_Next(void);
    DSSPM_CAPI_DLL void Reclosers_Set_Name(char* Value);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_MonitoredTerm(void);
    DSSPM_CAPI_DLL void Reclosers_Set_MonitoredTerm(int32_t Value);
    DSSPM_CAPI_DLL char* Reclosers_Get_SwitchedObj(void);
    DSSPM_CAPI_DLL void Reclosers_Set_SwitchedObj(char* Value);
    DSSPM_CAPI_DLL char* Reclosers_Get_MonitoredObj(void);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_SwitchedTerm(void);
    DSSPM_CAPI_DLL void Reclosers_Set_MonitoredObj(char* Value);
    DSSPM_CAPI_DLL void Reclosers_Set_SwitchedTerm(int32_t Value);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_NumFast(void);
    DSSPM_CAPI_DLL void Reclosers_Get_RecloseIntervals(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_Shots(void);
    DSSPM_CAPI_DLL void Reclosers_Set_NumFast(int32_t Value);
    DSSPM_CAPI_DLL void Reclosers_Set_Shots(int32_t Value);
    DSSPM_CAPI_DLL double Reclosers_Get_PhaseTrip(void);
    DSSPM_CAPI_DLL void Reclosers_Set_PhaseTrip(double Value);
    DSSPM_CAPI_DLL double Reclosers_Get_GroundInst(void);
    DSSPM_CAPI_DLL double Reclosers_Get_GroundTrip(void);
    DSSPM_CAPI_DLL double Reclosers_Get_PhaseInst(void);
    DSSPM_CAPI_DLL void Reclosers_Set_GroundInst(double Value);
    DSSPM_CAPI_DLL void Reclosers_Set_GroundTrip(double Value);
    DSSPM_CAPI_DLL void Reclosers_Set_PhaseInst(double Value);
    DSSPM_CAPI_DLL void Reclosers_Close(void);
    DSSPM_CAPI_DLL void Reclosers_Open(void);
    DSSPM_CAPI_DLL int32_t Reclosers_Get_idx(void);
    DSSPM_CAPI_DLL void Reclosers_Set_idx(int32_t Value);
    DSSPM_CAPI_DLL void RegControls_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double RegControls_Get_CTPrimary(void);
    DSSPM_CAPI_DLL double RegControls_Get_Delay(void);
    DSSPM_CAPI_DLL int32_t RegControls_Get_First(void);
    DSSPM_CAPI_DLL double RegControls_Get_ForwardBand(void);
    DSSPM_CAPI_DLL double RegControls_Get_ForwardR(void);
    DSSPM_CAPI_DLL double RegControls_Get_ForwardVreg(void);
    DSSPM_CAPI_DLL double RegControls_Get_ForwardX(void);
    DSSPM_CAPI_DLL uint16_t RegControls_Get_IsInverseTime(void);
    DSSPM_CAPI_DLL uint16_t RegControls_Get_IsReversible(void);
    DSSPM_CAPI_DLL int32_t RegControls_Get_MaxTapChange(void);
    DSSPM_CAPI_DLL char* RegControls_Get_MonitoredBus(void);
    DSSPM_CAPI_DLL char* RegControls_Get_Name(void);
    DSSPM_CAPI_DLL int32_t RegControls_Get_Next(void);
    DSSPM_CAPI_DLL double RegControls_Get_PTratio(void);
    DSSPM_CAPI_DLL double RegControls_Get_ReverseBand(void);
    DSSPM_CAPI_DLL double RegControls_Get_ReverseR(void);
    DSSPM_CAPI_DLL double RegControls_Get_ReverseVreg(void);
    DSSPM_CAPI_DLL double RegControls_Get_ReverseX(void);
    DSSPM_CAPI_DLL double RegControls_Get_TapDelay(void);
    DSSPM_CAPI_DLL int32_t RegControls_Get_TapWinding(void);
    DSSPM_CAPI_DLL char* RegControls_Get_Transformer(void);
    DSSPM_CAPI_DLL double RegControls_Get_VoltageLimit(void);
    DSSPM_CAPI_DLL int32_t RegControls_Get_Winding(void);
    DSSPM_CAPI_DLL int32_t RegControls_Get_TapNumber(void);
    DSSPM_CAPI_DLL void RegControls_Set_CTPrimary(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_Delay(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ForwardBand(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ForwardR(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ForwardVreg(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ForwardX(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_IsInverseTime(uint16_t Value);
    DSSPM_CAPI_DLL void RegControls_Set_IsReversible(uint16_t Value);
    DSSPM_CAPI_DLL void RegControls_Set_MaxTapChange(int32_t Value);
    DSSPM_CAPI_DLL void RegControls_Set_MonitoredBus(char* Value);
    DSSPM_CAPI_DLL void RegControls_Set_Name(char* Value);
    DSSPM_CAPI_DLL void RegControls_Set_PTratio(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ReverseBand(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ReverseR(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ReverseVreg(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_ReverseX(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_TapDelay(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_TapWinding(int32_t Value);
    DSSPM_CAPI_DLL void RegControls_Set_Transformer(char* Value);
    DSSPM_CAPI_DLL void RegControls_Set_VoltageLimit(double Value);
    DSSPM_CAPI_DLL void RegControls_Set_Winding(int32_t Value);
    DSSPM_CAPI_DLL void RegControls_Set_TapNumber(int32_t Value);
    DSSPM_CAPI_DLL int32_t RegControls_Get_Count(void);
    DSSPM_CAPI_DLL void RegControls_Reset(void);
    DSSPM_CAPI_DLL void Relays_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Relays_Get_Count(void);
    DSSPM_CAPI_DLL int32_t Relays_Get_First(void);
    DSSPM_CAPI_DLL char* Relays_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Relays_Get_Next(void);
    DSSPM_CAPI_DLL void Relays_Set_Name(char* Value);
    DSSPM_CAPI_DLL char* Relays_Get_MonitoredObj(void);
    DSSPM_CAPI_DLL void Relays_Set_MonitoredObj(char* Value);
    DSSPM_CAPI_DLL int32_t Relays_Get_MonitoredTerm(void);
    DSSPM_CAPI_DLL char* Relays_Get_SwitchedObj(void);
    DSSPM_CAPI_DLL void Relays_Set_MonitoredTerm(int32_t Value);
    DSSPM_CAPI_DLL void Relays_Set_SwitchedObj(char* Value);
    DSSPM_CAPI_DLL int32_t Relays_Get_SwitchedTerm(void);
    DSSPM_CAPI_DLL void Relays_Set_SwitchedTerm(int32_t Value);
    DSSPM_CAPI_DLL int32_t Relays_Get_idx(void);
    DSSPM_CAPI_DLL void Relays_Set_idx(int32_t Value);
    DSSPM_CAPI_DLL void Sensors_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Sensors_Get_Count(void);
    DSSPM_CAPI_DLL void Sensors_Get_Currents(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Sensors_Get_First(void);
    DSSPM_CAPI_DLL uint16_t Sensors_Get_IsDelta(void);
    DSSPM_CAPI_DLL void Sensors_Get_kVARS(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Sensors_Get_kVS(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Sensors_Get_kWS(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL char* Sensors_Get_MeteredElement(void);
    DSSPM_CAPI_DLL int32_t Sensors_Get_MeteredTerminal(void);
    DSSPM_CAPI_DLL char* Sensors_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Sensors_Get_Next(void);
    DSSPM_CAPI_DLL double Sensors_Get_PctError(void);
    DSSPM_CAPI_DLL uint16_t Sensors_Get_ReverseDelta(void);
    DSSPM_CAPI_DLL double Sensors_Get_Weight(void);
    DSSPM_CAPI_DLL void Sensors_Reset(void);
    DSSPM_CAPI_DLL void Sensors_ResetAll(void);
    DSSPM_CAPI_DLL void Sensors_Set_Currents(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Sensors_Set_IsDelta(uint16_t Value);
    DSSPM_CAPI_DLL void Sensors_Set_kVARS(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Sensors_Set_kVS(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Sensors_Set_kWS(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Sensors_Set_MeteredElement(char* Value);
    DSSPM_CAPI_DLL void Sensors_Set_MeteredTerminal(int32_t Value);
    DSSPM_CAPI_DLL void Sensors_Set_Name(char* Value);
    DSSPM_CAPI_DLL void Sensors_Set_PctError(double Value);
    DSSPM_CAPI_DLL void Sensors_Set_ReverseDelta(uint16_t Value);
    DSSPM_CAPI_DLL void Sensors_Set_Weight(double Value);
    DSSPM_CAPI_DLL double Sensors_Get_kVbase(void);
    DSSPM_CAPI_DLL void Sensors_Set_kVbase(double Value);
    DSSPM_CAPI_DLL uint16_t Settings_Get_AllowDuplicates(void);
    DSSPM_CAPI_DLL char* Settings_Get_AutoBusList(void);
    DSSPM_CAPI_DLL int32_t Settings_Get_CktModel(void);
    DSSPM_CAPI_DLL double Settings_Get_EmergVmaxpu(void);
    DSSPM_CAPI_DLL double Settings_Get_EmergVminpu(void);
    DSSPM_CAPI_DLL double Settings_Get_NormVmaxpu(void);
    DSSPM_CAPI_DLL double Settings_Get_NormVminpu(void);
    DSSPM_CAPI_DLL uint16_t Settings_Get_ZoneLock(void);
    DSSPM_CAPI_DLL void Settings_Set_AllocationFactors(double Value);
    DSSPM_CAPI_DLL void Settings_Set_AllowDuplicates(uint16_t Value);
    DSSPM_CAPI_DLL void Settings_Set_AutoBusList(char* Value);
    DSSPM_CAPI_DLL void Settings_Set_CktModel(int32_t Value);
    DSSPM_CAPI_DLL void Settings_Set_EmergVmaxpu(double Value);
    DSSPM_CAPI_DLL void Settings_Set_EmergVminpu(double Value);
    DSSPM_CAPI_DLL void Settings_Set_NormVmaxpu(double Value);
    DSSPM_CAPI_DLL void Settings_Set_NormVminpu(double Value);
    DSSPM_CAPI_DLL void Settings_Set_ZoneLock(uint16_t Value);
    DSSPM_CAPI_DLL void Settings_Get_LossRegs(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Settings_Get_LossWeight(void);
    DSSPM_CAPI_DLL uint16_t Settings_Get_Trapezoidal(void);
    DSSPM_CAPI_DLL void Settings_Get_UEregs(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Settings_Get_UEweight(void);
    DSSPM_CAPI_DLL void Settings_Set_LossRegs(int32_t* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Settings_Set_LossWeight(double Value);
    DSSPM_CAPI_DLL void Settings_Set_Trapezoidal(uint16_t Value);
    DSSPM_CAPI_DLL void Settings_Set_UEregs(int32_t* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL void Settings_Set_UEweight(double Value);
    DSSPM_CAPI_DLL uint16_t Settings_Get_ControlTrace(void);
    DSSPM_CAPI_DLL void Settings_Get_VoltageBases(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Settings_Set_ControlTrace(uint16_t Value);
    DSSPM_CAPI_DLL void Settings_Set_VoltageBases(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL char* Settings_Get_PriceCurve(void);
    DSSPM_CAPI_DLL double Settings_Get_PriceSignal(void);
    DSSPM_CAPI_DLL void Settings_Set_PriceCurve(char* Value);
    DSSPM_CAPI_DLL void Settings_Set_PriceSignal(double Value);
    DSSPM_CAPI_DLL double Solution_Get_Frequency(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_Hour(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_Iterations(void);
    DSSPM_CAPI_DLL double Solution_Get_LoadMult(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_MaxIterations(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_Mode(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_Number(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_Random(void);
    DSSPM_CAPI_DLL double Solution_Get_Seconds(void);
    DSSPM_CAPI_DLL double Solution_Get_StepSize(void);
    DSSPM_CAPI_DLL double Solution_Get_Tolerance(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_Year(void);
    DSSPM_CAPI_DLL void Solution_Set_Frequency(double Value);
    DSSPM_CAPI_DLL void Solution_Set_Hour(int32_t Value);
    DSSPM_CAPI_DLL void Solution_Set_LoadMult(double Value);
    DSSPM_CAPI_DLL void Solution_Set_MaxIterations(int32_t Value);
    DSSPM_CAPI_DLL void Solution_Set_Mode(int32_t Mode);
    DSSPM_CAPI_DLL void Solution_Set_Number(int32_t Value);
    DSSPM_CAPI_DLL void Solution_Set_Random(int32_t Random);
    DSSPM_CAPI_DLL void Solution_Set_Seconds(double Value);
    DSSPM_CAPI_DLL void Solution_Set_StepSize(double Value);
    DSSPM_CAPI_DLL void Solution_Set_Tolerance(double Value);
    DSSPM_CAPI_DLL void Solution_Set_Year(int32_t Value);
    DSSPM_CAPI_DLL void Solution_Solve(void);
    DSSPM_CAPI_DLL char* Solution_Get_ModeID(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_LoadModel(void);
    DSSPM_CAPI_DLL void Solution_Set_LoadModel(int32_t Value);
    DSSPM_CAPI_DLL char* Solution_Get_LDCurve(void);
    DSSPM_CAPI_DLL void Solution_Set_LDCurve(char* Value);
    DSSPM_CAPI_DLL double Solution_Get_pctGrowth(void);
    DSSPM_CAPI_DLL void Solution_Set_pctGrowth(double Value);
    DSSPM_CAPI_DLL int32_t Solution_Get_AddType(void);
    DSSPM_CAPI_DLL void Solution_Set_AddType(int32_t Value);
    DSSPM_CAPI_DLL double Solution_Get_GenkW(void);
    DSSPM_CAPI_DLL void Solution_Set_GenkW(double Value);
    DSSPM_CAPI_DLL double Solution_Get_GenPF(void);
    DSSPM_CAPI_DLL void Solution_Set_GenPF(double Value);
    DSSPM_CAPI_DLL double Solution_Get_Capkvar(void);
    DSSPM_CAPI_DLL void Solution_Set_Capkvar(double Value);
    DSSPM_CAPI_DLL int32_t Solution_Get_Algorithm(void);
    DSSPM_CAPI_DLL void Solution_Set_Algorithm(int32_t Value);
    DSSPM_CAPI_DLL int32_t Solution_Get_ControlMode(void);
    DSSPM_CAPI_DLL void Solution_Set_ControlMode(int32_t Value);
    DSSPM_CAPI_DLL double Solution_Get_GenMult(void);
    DSSPM_CAPI_DLL void Solution_Set_GenMult(double Value);
    DSSPM_CAPI_DLL char* Solution_Get_DefaultDaily(void);
    DSSPM_CAPI_DLL char* Solution_Get_DefaultYearly(void);
    DSSPM_CAPI_DLL void Solution_Set_DefaultDaily(char* Value);
    DSSPM_CAPI_DLL void Solution_Set_DefaultYearly(char* Value);
    DSSPM_CAPI_DLL void Solution_Get_EventLog(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double Solution_Get_dblHour(void);
    DSSPM_CAPI_DLL void Solution_Set_dblHour(double Value);
    DSSPM_CAPI_DLL void Solution_Set_StepsizeHr(double Value);
    DSSPM_CAPI_DLL void Solution_Set_StepsizeMin(double Value);
    DSSPM_CAPI_DLL int32_t Solution_Get_ControlIterations(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_MaxControlIterations(void);
    DSSPM_CAPI_DLL void Solution_Sample_DoControlActions(void);
    DSSPM_CAPI_DLL void Solution_Set_ControlIterations(int32_t Value);
    DSSPM_CAPI_DLL void Solution_Set_MaxControlIterations(int32_t Value);
    DSSPM_CAPI_DLL void Solution_CheckFaultStatus(void);
    DSSPM_CAPI_DLL void Solution_SolveDirect(void);
    DSSPM_CAPI_DLL void Solution_SolveNoControl(void);
    DSSPM_CAPI_DLL void Solution_SolvePflow(void);
    DSSPM_CAPI_DLL void Solution_SolvePlusControl(void);
    DSSPM_CAPI_DLL void Solution_SolveSnap(void);
    DSSPM_CAPI_DLL void Solution_CheckControls(void);
    DSSPM_CAPI_DLL void Solution_InitSnap(void);
    DSSPM_CAPI_DLL uint16_t Solution_Get_SystemYChanged(void);
    DSSPM_CAPI_DLL void Solution_BuildYMatrix(int32_t BuildOption, int32_t AllocateVI);
    DSSPM_CAPI_DLL void Solution_DoControlActions(void);
    DSSPM_CAPI_DLL void Solution_SampleControlDevices(void);
    DSSPM_CAPI_DLL uint16_t Solution_Get_Converged(void);
    DSSPM_CAPI_DLL void Solution_Set_Converged(uint16_t Value);
    DSSPM_CAPI_DLL int32_t Solution_Get_Totaliterations(void);
    DSSPM_CAPI_DLL int32_t Solution_Get_MostIterationsDone(void);
    DSSPM_CAPI_DLL uint16_t Solution_Get_ControlActionsDone(void);
    DSSPM_CAPI_DLL void Solution_Set_ControlActionsDone(uint16_t Value);
    DSSPM_CAPI_DLL void Solution_Cleanup(void);
    DSSPM_CAPI_DLL void Solution_FinishTimeStep(void);
    DSSPM_CAPI_DLL double Solution_Get_Process_Time(void);
    DSSPM_CAPI_DLL double Solution_Get_Total_Time(void);
    DSSPM_CAPI_DLL void Solution_Set_Total_Time(double Value);
    DSSPM_CAPI_DLL double Solution_Get_Time_of_Step(void);
    DSSPM_CAPI_DLL double Solution_Get_IntervalHrs(void);
    DSSPM_CAPI_DLL void Solution_Set_IntervalHrs(double Value);
    DSSPM_CAPI_DLL int32_t Solution_Get_MinIterations(void);
    DSSPM_CAPI_DLL void Solution_Set_MinIterations(int32_t Value);
    DSSPM_CAPI_DLL void Solution_SolveAll(void);
    DSSPM_CAPI_DLL void Solution_Get_IncMatrix(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Solution_Get_BusLevels(int32_t** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Solution_Get_IncMatrixRows(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Solution_Get_IncMatrixCols(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_Action(void);
    DSSPM_CAPI_DLL void SwtControls_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL double SwtControls_Get_Delay(void);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_First(void);
    DSSPM_CAPI_DLL uint16_t SwtControls_Get_IsLocked(void);
    DSSPM_CAPI_DLL char* SwtControls_Get_Name(void);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_Next(void);
    DSSPM_CAPI_DLL char* SwtControls_Get_SwitchedObj(void);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_SwitchedTerm(void);
    DSSPM_CAPI_DLL void SwtControls_Set_Action(int32_t Value);
    DSSPM_CAPI_DLL void SwtControls_Set_Delay(double Value);
    DSSPM_CAPI_DLL void SwtControls_Set_IsLocked(uint16_t Value);
    DSSPM_CAPI_DLL void SwtControls_Set_Name(char* Value);
    DSSPM_CAPI_DLL void SwtControls_Set_SwitchedObj(char* Value);
    DSSPM_CAPI_DLL void SwtControls_Set_SwitchedTerm(int32_t Value);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_Count(void);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_NormalState(void);
    DSSPM_CAPI_DLL void SwtControls_Set_NormalState(int32_t Value);
    DSSPM_CAPI_DLL int32_t SwtControls_Get_State(void);
    DSSPM_CAPI_DLL void SwtControls_Set_State(int32_t Value);
    DSSPM_CAPI_DLL void SwtControls_Reset(void);
    DSSPM_CAPI_DLL char* Text_Get_Command(void);
    DSSPM_CAPI_DLL void Text_Set_Command(char* Value);
    DSSPM_CAPI_DLL char* Text_Get_Result(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_NumLoops(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_ActiveBranch(void);
    DSSPM_CAPI_DLL void Topology_Get_AllIsolatedBranches(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void Topology_Get_AllLoopedPairs(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Topology_Get_BackwardBranch(void);
    DSSPM_CAPI_DLL char* Topology_Get_BranchName(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_First(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_ForwardBranch(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_LoopedBranch(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_Next(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_NumIsolatedBranches(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_ParallelBranch(void);
    DSSPM_CAPI_DLL void Topology_Set_BranchName(char* Value);
    DSSPM_CAPI_DLL void Topology_Get_AllIsolatedLoads(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Topology_Get_FirstLoad(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_NextLoad(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_NumIsolatedLoads(void);
    DSSPM_CAPI_DLL int32_t Topology_Get_ActiveLevel(void);
    DSSPM_CAPI_DLL char* Topology_Get_BusName(void);
    DSSPM_CAPI_DLL void Topology_Set_BusName(char* Value);
    DSSPM_CAPI_DLL void Transformers_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Transformers_Get_First(void);
    DSSPM_CAPI_DLL uint16_t Transformers_Get_IsDelta(void);
    DSSPM_CAPI_DLL double Transformers_Get_kV(void);
    DSSPM_CAPI_DLL double Transformers_Get_kVA(void);
    DSSPM_CAPI_DLL double Transformers_Get_MaxTap(void);
    DSSPM_CAPI_DLL double Transformers_Get_MinTap(void);
    DSSPM_CAPI_DLL char* Transformers_Get_Name(void);
    DSSPM_CAPI_DLL int32_t Transformers_Get_Next(void);
    DSSPM_CAPI_DLL int32_t Transformers_Get_NumTaps(void);
    DSSPM_CAPI_DLL int32_t Transformers_Get_NumWindings(void);
    DSSPM_CAPI_DLL double Transformers_Get_R(void);
    DSSPM_CAPI_DLL double Transformers_Get_Rneut(void);
    DSSPM_CAPI_DLL double Transformers_Get_Tap(void);
    DSSPM_CAPI_DLL int32_t Transformers_Get_Wdg(void);
    DSSPM_CAPI_DLL char* Transformers_Get_XfmrCode(void);
    DSSPM_CAPI_DLL double Transformers_Get_Xhl(void);
    DSSPM_CAPI_DLL double Transformers_Get_Xht(void);
    DSSPM_CAPI_DLL double Transformers_Get_Xlt(void);
    DSSPM_CAPI_DLL double Transformers_Get_Xneut(void);
    DSSPM_CAPI_DLL void Transformers_Set_IsDelta(uint16_t Value);
    DSSPM_CAPI_DLL void Transformers_Set_kV(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_kVA(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_MaxTap(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_MinTap(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Name(char* Value);
    DSSPM_CAPI_DLL void Transformers_Set_NumTaps(int32_t Value);
    DSSPM_CAPI_DLL void Transformers_Set_NumWindings(int32_t Value);
    DSSPM_CAPI_DLL void Transformers_Set_R(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Rneut(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Tap(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Wdg(int32_t Value);
    DSSPM_CAPI_DLL void Transformers_Set_XfmrCode(char* Value);
    DSSPM_CAPI_DLL void Transformers_Set_Xhl(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Xht(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Xlt(double Value);
    DSSPM_CAPI_DLL void Transformers_Set_Xneut(double Value);
    DSSPM_CAPI_DLL int32_t Transformers_Get_Count(void);
    DSSPM_CAPI_DLL void Vsources_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL int32_t Vsources_Get_Count(void);
    DSSPM_CAPI_DLL int32_t Vsources_Get_First(void);
    DSSPM_CAPI_DLL int32_t Vsources_Get_Next(void);
    DSSPM_CAPI_DLL char* Vsources_Get_Name(void);
    DSSPM_CAPI_DLL void Vsources_Set_Name(char* Value);
    DSSPM_CAPI_DLL double Vsources_Get_BasekV(void);
    DSSPM_CAPI_DLL double Vsources_Get_pu(void);
    DSSPM_CAPI_DLL void Vsources_Set_BasekV(double Value);
    DSSPM_CAPI_DLL void Vsources_Set_pu(double Value);
    DSSPM_CAPI_DLL double Vsources_Get_AngleDeg(void);
    DSSPM_CAPI_DLL double Vsources_Get_Frequency(void);
    DSSPM_CAPI_DLL int32_t Vsources_Get_Phases(void);
    DSSPM_CAPI_DLL void Vsources_Set_AngleDeg(double Value);
    DSSPM_CAPI_DLL void Vsources_Set_Frequency(double Value);
    DSSPM_CAPI_DLL void Vsources_Set_Phases(int32_t Value);
    DSSPM_CAPI_DLL int32_t XYCurves_Get_Count(void);
    DSSPM_CAPI_DLL int32_t XYCurves_Get_First(void);
    DSSPM_CAPI_DLL char* XYCurves_Get_Name(void);
    DSSPM_CAPI_DLL int32_t XYCurves_Get_Next(void);
    DSSPM_CAPI_DLL void XYCurves_Set_Name(char* Value);
    DSSPM_CAPI_DLL int32_t XYCurves_Get_Npts(void);
    DSSPM_CAPI_DLL void XYCurves_Get_Xarray(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void XYCurves_Set_Npts(int32_t Value);
    DSSPM_CAPI_DLL void XYCurves_Set_Xarray(double* ValuePtr, int32_t ValueCount);
    DSSPM_CAPI_DLL double XYCurves_Get_x(void);
    DSSPM_CAPI_DLL double XYCurves_Get_y(void);
    DSSPM_CAPI_DLL void XYCurves_Get_Yarray(double** ResultPtr, int32_t* ResultCount);
    DSSPM_CAPI_DLL void XYCurves_Set_x(double Value);
    DSSPM_CAPI_DLL void XYCurves_Set_y(double Value);
    DSSPM_CAPI_DLL double XYCurves_Get_Xscale(void);
    DSSPM_CAPI_DLL double XYCurves_Get_Xshift(void);
    DSSPM_CAPI_DLL double XYCurves_Get_Yscale(void);
    DSSPM_CAPI_DLL double XYCurves_Get_Yshift(void);
    DSSPM_CAPI_DLL void XYCurves_Set_Xscale(double Value);
    DSSPM_CAPI_DLL void XYCurves_Set_Xshift(double Value);
    DSSPM_CAPI_DLL void XYCurves_Set_Yscale(double Value);
    DSSPM_CAPI_DLL void XYCurves_Set_Yshift(double Value);

    DSSPM_CAPI_DLL void YMatrix_GetCompressedYMatrix(uint16_t factor, uint32_t *nBus, uint32_t *nNz, int32_t **ColPtr, int32_t **RowIdxPtr, double **cValsPtr);
    DSSPM_CAPI_DLL void YMatrix_ZeroInjCurr(void);
    DSSPM_CAPI_DLL void YMatrix_GetSourceInjCurrents(void);
    DSSPM_CAPI_DLL void YMatrix_GetPCInjCurr(void);
    DSSPM_CAPI_DLL void YMatrix_BuildYMatrixD(int32_t BuildOps, int32_t AllocateVI);
    DSSPM_CAPI_DLL void YMatrix_AddInAuxCurrents(int32_t SType);
    DSSPM_CAPI_DLL void YMatrix_getIpointer(double **IvectorPtr);
    DSSPM_CAPI_DLL void YMatrix_getVpointer(double **VvectorPtr);
    DSSPM_CAPI_DLL int32_t YMatrix_SolveSystem(double **NodeVPtr);
    DSSPM_CAPI_DLL void YMatrix_Set_SystemYChanged(uint16_t arg);
    DSSPM_CAPI_DLL uint16_t YMatrix_Get_SystemYChanged(void);
    DSSPM_CAPI_DLL void YMatrix_Set_UseAuxCurrents(uint16_t arg);
    DSSPM_CAPI_DLL uint16_t YMatrix_Get_UseAuxCurrents(void);
    

    enum MonitorModes {
        MonitorModes_VI = 0x00000000,
        MonitorModes_Power = 0x00000001,
        MonitorModes_Sequence = 0x00000010,
        MonitorModes_Magnitude = 0x00000020,
        MonitorModes_PosOnly = 0x00000040,
        MonitorModes_Taps = 0x00000002,
        MonitorModes_States = 0x00000003
    };

    enum SolveModes {
        SolveModes_SnapShot = 0x00000000,
        SolveModes_DutyCycle = 0x00000006,
        SolveModes_Direct = 0x00000007,
        SolveModes_Daily = 0x00000001,
        SolveModes_Monte1 = 0x00000003,
        SolveModes_Monte2 = 0x0000000A,
        SolveModes_Monte3 = 0x0000000B,
        SolveModes_FaultStudy = 0x00000009,
        SolveModes_Yearly = 0x00000002,
        SolveModes_MonteFault = 0x00000008,
        SolveModes_PeakDay = 0x00000005,
        SolveModes_LD1 = 0x00000004,
        SolveModes_LD2 = 0x0000000C,
        SolveModes_AutoAdd = 0x0000000D,
        SolveModes_Harmonic = 0x0000000F,
        SolveModes_Dynamic = 0x0000000E
    };

    enum Options {
        Options_PowerFlow = 0x00000001,
        Options_Admittance = 0x00000002,
        Options_NormalSolve = 0x00000000,
        Options_NewtonSolve = 0x00000001,
        Options_Static = 0x00000000,
        Options_Event = 0x00000001,
        Options_Time = 0x00000002,
        Options_Multiphase = 0x00000000,
        Options_PositiveSeq = 0x00000001,
        Options_Gaussian = 0x00000001,
        Options_Uniform = 0x00000002,
        Options_LogNormal = 0x00000003,
        Options_AddGen = 0x00000001,
        Options_AddCap = 0x00000002,
        Options_ControlOFF = 0xFFFFFFFF
    };

    enum CapControlModes {
        CapControlModes_Voltage = 0x00000001,
        CapControlModes_KVAR = 0x00000002,
        CapControlModes_Current = 0x00000000,
        CapControlModes_PF = 0x00000004,
        CapControlModes_Time = 0x00000003
    };

    enum ActionCodes {
        ActionCodes_none = 0x00000000,
        ActionCodes_Open = 0x00000001,
        ActionCodes_Close = 0x00000002,
        ActionCodes_Reset = 0x00000003,
        ActionCodes_Lock = 0x00000004,
        ActionCodes_Unlock = 0x00000005,
        ActionCodes_TapUp = 0x00000006,
        ActionCodes_TapDown = 0x00000007
    };

    enum LoadStatus {
        LoadStatus_Variable = 0x00000000,
        LoadStatus_Fixed = 0x00000001,
        LoadStatus_Exempt = 0x00000002
    };

    enum LoadModels {
        LoadModels_ConstPQ = 0x00000001,
        LoadModels_ConstZ = 0x00000002,
        LoadModels_Motor = 0x00000003,
        LoadModels_CVR = 0x00000004,
        LoadModels_ConstI = 0x00000005,
        LoadModels_ConstPFixedQ = 0x00000006,
        LoadModels_ConstPFixedX = 0x00000007,
        LoadModels_ZIPV = 0x00000008
    };

    enum LineUnits {
        LineUnits_none = 0x00000000,
        LineUnits_Miles = 0x00000001,
        LineUnits_kFt = 0x00000002,
        LineUnits_km = 0x00000003,
        LineUnits_meter = 0x00000004,
        LineUnits_ft = 0x00000005,
        LineUnits_inch = 0x00000006,
        LineUnits_cm = 0x00000007,
        LineUnits_mm = 0x00000008,
        LineUnits_Maxnum = 0x00000009
    };

#ifdef __cplusplus
}
#endif
#endif
